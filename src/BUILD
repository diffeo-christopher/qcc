py_library(
    name = "qcall",
    srcs = [],
    deps = [
        "//src/lib:bell",
        "//src/lib:circuit",
        "//src/lib:helper",
        "//src/lib:ops",
        "//src/lib:optimizer",
        "//src/lib:state",
        "//src/lib:tensor",
    ],
)

py_binary(
    name = "arith_classic",
    srcs = ["arith_classic.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "amplitude_estimation",
    srcs = ["amplitude_estimation.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "arith_quantum",
    srcs = ["arith_quantum.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "bernstein",
    srcs = ["bernstein.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "chsh",
    srcs = ["chsh.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "counting",
    srcs = ["counting.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "deutsch",
    srcs = ["deutsch.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "deutsch_jozsa",
    srcs = ["deutsch_jozsa.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "entanglement_swap",
    srcs = ["entanglement_swap.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "estimate_pi",
    srcs = ["estimate_pi.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "euclidean_distance",
    srcs = ["euclidean_distance.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "graph_coloring",
    srcs = ["graph_coloring.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "grover",
    srcs = ["grover.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "hadamard_test",
    srcs = ["hadamard_test.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "hamiltonian_cycle",
    srcs = ["hamiltonian_cycle.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "hamiltonian_encoding",
    srcs = ["hamiltonian_encoding.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "hhl",
    srcs = ["hhl.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "hhl_2x2",
    srcs = ["hhl_2x2.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "inversion_test",
    srcs = ["inversion_test.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "max_cut",
    srcs = ["max_cut.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "minimum_finding",
    srcs = ["minimum_finding.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "oracle_synth",
    srcs = ["oracle_synth.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "order_finding",
    srcs = ["order_finding.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "pauli_rep",
    srcs = ["pauli_rep.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "phase_estimation",
    srcs = ["phase_estimation.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "phase_kick",
    srcs = ["phase_kick.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "purification",
    srcs = ["purification.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "qram",
    srcs = ["qram.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "quantum_mean",
    srcs = ["quantum_mean.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "quantum_median",
    srcs = ["quantum_median.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "quantum_pca",
    srcs = ["quantum_pca.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "quantum_walk",
    srcs = ["quantum_walk.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "sat3",
    srcs = ["sat3.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "schmidt_decomp",
    srcs = ["schmidt_decomp.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "shor_classic",
    srcs = ["shor_classic.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "simon",
    srcs = ["simon.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "simon_general",
    srcs = ["simon_general.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "solovay_kitaev",
    srcs = ["solovay_kitaev.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "spectral_decomp",
    srcs = ["spectral_decomp.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "state_prep",
    srcs = ["state_prep.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "state_prep_mottonen",
    srcs = ["state_prep_mottonen.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "subset_sum",
    srcs = ["subset_sum.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "superdense",
    srcs = ["superdense.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "supremacy",
    srcs = ["supremacy.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "swap_test",
    srcs = ["swap_test.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "teleportation",
    srcs = ["teleportation.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "vqe_simple",
    srcs = ["vqe_simple.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)

py_binary(
    name = "zy_decomp",
    srcs = ["zy_decomp.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":qcall",
    ],
)
